--- a/arch/arm/mach-omap2/board-omap3beagle.c
+++ b/arch/arm/mach-omap2/board-omap3beagle.c
@@ -18,6 +18,7 @@
 #include <linux/delay.h>
 #include <linux/err.h>
 #include <linux/clk.h>
+#include <linux/clkdev.h>
 #include <linux/io.h>
 #include <linux/leds.h>
 #include <linux/pwm.h>
@@ -563,13 +564,18 @@
 	REGULATOR_SUPPLY("vmmc_aux", "omap_hsmmc.0"),
 };
 
-static struct regulator_consumer_supply beagle_vaux3_supply = {
-	.supply		= "cam_1v8",
-};
-
-static struct regulator_consumer_supply beagle_vaux4_supply = {
-	.supply		= "cam_2v8",
-};
+#if defined(CONFIG_VIDEO_MT9P031)
+#define MT9P031_DEV_ID		"2-0048"
+#endif
+
+static struct regulator_consumer_supply beagle_vaux3_supply =
+	REGULATOR_SUPPLY("vdd", MT9P031_DEV_ID);
+
+static struct regulator_consumer_supply beagle_vaux4_supply =
+	REGULATOR_SUPPLY("vdd_io", MT9P031_DEV_ID);
+
+static struct regulator_consumer_supply beagle_cam3v3_supply =
+	REGULATOR_SUPPLY("vaa", MT9P031_DEV_ID);
 
 static struct gpio_led gpio_leds[];
 
@@ -784,7 +790,7 @@
 /* needed for: v4l2_dev_to_isp_device */
 #include "../../../drivers/media/platform/omap3isp/isp.h"
 
-#define MT9P031_XCLK		ISP_XCLK_A
+#define MT9P031_XCLK		"cam_xclka"
 
 #define MT9P031_RESET_GPIO	98
 #define MT9P031_EXT_FREQ	21000000
@@ -792,8 +798,6 @@
 
 #define MT9P031_I2C_ADDR	0x48
 #define MT9P031_I2C_BUS		2
-
-static struct regulator *reg_1v8, *reg_2v8;
 
 static struct mt9p031_platform_data beagle_mt9p031_platform_data = {
 	.reset		= MT9P031_RESET_GPIO,
@@ -829,6 +833,8 @@
 };
 
 static struct isp_platform_data beagle_isp_platform_data = {
+	// binds cam_xclka:
+	.xclks[0].dev_id = MT9P031_DEV_ID,
 	.subdevs = beagle_camera_subdevs,
 };
 #endif
@@ -1342,17 +1348,7 @@
 	{
 		pr_info("Beagle camera: MT9P031 init\n");
 
-		reg_1v8 = regulator_get(NULL, "cam_1v8");
-		if (IS_ERR(reg_1v8))
-			pr_err("%s: cannot get cam_1v8 regulator\n", __func__);
-		else
-			regulator_enable(reg_1v8);
-
-		reg_2v8 = regulator_get(NULL, "cam_2v8");
-		if (IS_ERR(reg_2v8))
-			pr_err("%s: cannot get cam_2v8 regulator\n", __func__);
-		else
-			regulator_enable(reg_2v8);
+		regulator_register_fixed(0, &beagle_cam3v3_supply, 1);
 
 		omap3_init_camera(&beagle_isp_platform_data);
 	}
